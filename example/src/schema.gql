# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Aggregate {
  count: Int!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

interface Node {
  id: ID!
}

enum OrderByDirection {
  ASC
  DESC
}

input OrderByInput {
  createdAt: OrderByDirection
  updatedAt: OrderByDirection
}

type PageInfo {
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}

type Query {
  node(id: ID!): Node
  recipes(
    """Paginate before opaque cursor"""
    before: String

    """Paginate after opaque cursor"""
    after: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    where: RecipeWhereInput
    orderBy: OrderByInput
  ): RecipesConnection!
}

type Recipe implements Node {
  id: ID!
  title: String!
  description: String
  creationDate: DateTime!
  ingredients: [String!]!
}

type RecipesConnection {
  pageInfo: PageInfo!
  edges: [RecipesEdge!]!
  aggregate: Aggregate!
}

type RecipesEdge {
  node: Recipe!
  cursor: String!
}

input RecipeWhereInput {
  title: String
}
